
[ |VECTOR| Test 1 ] Default constructor (run 1)
✓ OK

[ |VECTOR| Test 2 ] Copy constructor (run 1)
✓ OK

[ |VECTOR| Test 3 ] Assignment operator (run 1)
✓ OK

[ |VECTOR| Test 4 ] Clear (run 1)
✓ OK

[ |VECTOR| Test 5 ] Check empty() and size() (run 1)
✓ OK

[ |VECTOR| Test 6 ] Check max_size() > 0 (run 1)
✓ OK

[ |VECTOR| Test 7 ] capacity() check (run 1)
✓ OK

[ |VECTOR| Test 8 ] reserve(n) (run 1)
✓ OK

[ |VECTOR| Test 9 ] push_back(value) (run 1)
✓ OK

[ |VECTOR| Test 10 ] pop_back() (run 1)
✓ OK

[ |VECTOR| Test 11 ] resize(n) (run 1)
✓ OK

[ |VECTOR| Test 12 ] at(i) (run 1)
✓ OK

[ |VECTOR| Test 13 ] operator[](i) (run 1)
✓ OK

[ |VECTOR| Test 14 ] clear() (run 1)
✓ OK

[ |VECTOR| Test 15 ] swap(a, b) (run 1)
✓ OK

[ |VECTOR| Test 16 ] insert(pos, value) (run 1)
✓ OK

[ |VECTOR| Test 17 ] insert(pos, count, value) (run 1)
✓ OK

[ |VECTOR| Test 18 ] insert(pos, range) (run 1)
✓ OK

[ |VECTOR| Test 19 ] erase(pos) (run 1)
✓ OK

[ |VECTOR| Test 20 ] erase(range) (run 1)
✓ OK

[ |VECTOR| Test 21 ] front() (run 1)
✓ OK

[ |VECTOR| Test 22 ] back() (run 1)
✓ OK

[ |VECTOR| Test 23 ] assign(count, value) (run 1)
✓ OK

[ |VECTOR| Test 24 ] assign(first, last) (run 1)
✓ OK

[ |VECTOR| Test 25 ] begin/end traversal (run 1)
✓ OK

[ |VECTOR| Test 26 ] const begin/end (run 1)
✓ OK

[ |VECTOR| Test 27 ] rbegin/rend traversal (run 1)
✓ OK

[ |VECTOR| Test 28 ] operator== (run 1)
✓ OK

[ |VECTOR| Test 29 ] operator!= (run 1)
✓ OK

[ |VECTOR| Test 30 ] operator< (run 1)
✓ OK

[ |VECTOR| Test 31 ] operator> (run 1)
✓ OK

[ |VECTOR| Test 32 ] operator<= (run 1)
✓ OK

[ |VECTOR| Test 33 ] operator>= (run 1)
✓ OK

[ |LIST| Test 1 ] Default constructor (run 1)
✓ OK

[ |LIST| Test 2 ] Copy constructor (run 1)
✓ OK

[ |LIST| Test 3 ] Assignment operator (run 1)
✓ OK

[ |LIST| Test 4 ] Clear (run 1)
✓ OK

[ |LIST| Test 5 ] Check empty() and size() (run 1)
✓ OK

[ |LIST| Test 6 ] Check max_size() > 0 (run 1)
✓ OK

[ |LIST| Test 7 ] clear() (run 1)
✓ OK

[ |LIST| Test 8 ] swap(a, b) (run 1)
✓ OK

[ |LIST| Test 9 ] insert(pos, value) (run 1)
✓ OK

[ |LIST| Test 10 ] insert(pos, count, value) (run 1)
✓ OK

[ |LIST| Test 11 ] insert(pos, range) (run 1)
✓ OK

[ |LIST| Test 12 ] erase(pos) (run 1)
✓ OK

[ |LIST| Test 13 ] erase(range) (run 1)
✓ OK

[ |LIST| Test 14 ] assign(count, value) (run 1)
✓ OK

[ |LIST| Test 15 ] assign(first, last) (run 1)
✓ OK

[ |LIST| Test 16 ] front() (run 1)
✓ OK

[ |LIST| Test 17 ] back() (run 1)
✓ OK

[ |LIST| Test 18 ] begin/end traversal (run 1)
✓ OK

[ |LIST| Test 19 ] const begin/end (run 1)
✓ OK

[ |LIST| Test 20 ] rbegin/rend traversal (run 1)
✓ OK

[ |LIST| Test 21 ] operator== (run 1)
✓ OK

[ |LIST| Test 22 ] operator!= (run 1)
✓ OK

[ |LIST| Test 23 ] operator< (run 1)
✓ OK

[ |LIST| Test 24 ] operator> (run 1)
✓ OK

[ |LIST| Test 25 ] operator<= (run 1)
✓ OK

[ |LIST| Test 26 ] operator>= (run 1)
✓ OK

[ |DEQUE| Test 1 ] Default constructor (run 1)
✓ OK

[ |DEQUE| Test 2 ] Copy constructor (run 1)
✓ OK

[ |DEQUE| Test 3 ] Assignment operator (run 1)
✓ OK

[ |DEQUE| Test 4 ] Clear (run 1)
✓ OK

[ |DEQUE| Test 5 ] Check empty() and size() (run 1)
✓ OK

[ |DEQUE| Test 6 ] Check max_size() > 0 (run 1)
✓ OK

[ |DEQUE| Test 7 ] push_back(value) (run 1)
✓ OK

[ |DEQUE| Test 8 ] pop_back() (run 1)
✓ OK

[ |DEQUE| Test 9 ] resize(n) (run 1)
✓ OK

[ |DEQUE| Test 10 ] at(i) (run 1)
✓ OK

[ |DEQUE| Test 11 ] operator[](i) (run 1)
✓ OK

[ |DEQUE| Test 12 ] clear() (run 1)
✓ OK

[ |DEQUE| Test 13 ] swap(a, b) (run 1)
✓ OK

[ |DEQUE| Test 14 ] insert(pos, value) (run 1)
✓ OK

[ |DEQUE| Test 15 ] insert(pos, count, value) (run 1)
✓ OK

[ |DEQUE| Test 16 ] insert(pos, range) (run 1)
✓ OK

[ |DEQUE| Test 17 ] erase(pos) (run 1)
✓ OK

[ |DEQUE| Test 18 ] erase(range) (run 1)
✓ OK

[ |DEQUE| Test 19 ] assign(count, value) (run 1)
✓ OK

[ |DEQUE| Test 20 ] assign(first, last) (run 1)
✓ OK

[ |DEQUE| Test 21 ] front() (run 1)
✓ OK

[ |DEQUE| Test 22 ] back() (run 1)
✓ OK

[ |DEQUE| Test 23 ] begin/end traversal (run 1)
✓ OK

[ |DEQUE| Test 24 ] const begin/end (run 1)
✓ OK

[ |DEQUE| Test 25 ] rbegin/rend traversal (run 1)
✓ OK

[ |DEQUE| Test 26 ] operator== (run 1)
✓ OK

[ |DEQUE| Test 27 ] operator!= (run 1)
✓ OK

[ |DEQUE| Test 28 ] operator< (run 1)
✓ OK

[ |DEQUE| Test 29 ] operator> (run 1)
✓ OK

[ |DEQUE| Test 30 ] operator<= (run 1)
✓ OK

[ |DEQUE| Test 31 ] operator>= (run 1)
✓ OK

[ |MAP| Test 1 ] Default constructor (run 1)
✓ OK

[ |MAP| Test 2 ] Copy constructor (run 1)
✓ OK

[ |MAP| Test 3 ] Assignment operator (run 1)
✓ OK

[ |MAP| Test 4 ] Clear (run 1)
✓ OK

[ |MAP| Test 5 ] Check empty() and size() (run 1)
✓ OK

[ |MAP| Test 6 ] Check max_size() > 0 (run 1)
✓ OK

[ |MAP| Test 7 ] clear() (run 1)
✓ OK

[ |MAP| Test 8 ] swap(a, b) (run 1)
✓ OK

[ |MAP| Test 9 ] insert(value) (run 1)
✓ OK

[ |MAP| Test 10 ] erase(key) (run 1)
✓ OK

[ |MAP| Test 11 ] erase(iterator) (run 1)
✓ OK

[ |MAP| Test 12 ] clear() (run 1)
✓ OK

[ |MAP| Test 13 ] find(key) (run 1)
✓ OK

[ |MAP| Test 14 ] count(key) (run 1)
✓ OK

[ |MAP| Test 15 ] equal_range(key) (run 1)
✓ OK

[ |MAP| Test 16 ] insert(value) (run 1)
✓ OK

[ |MAP| Test 17 ] insert(hint, value) (run 1)
✓ OK

[ |MAP| Test 18 ] insert(range) (run 1)
✓ OK

[ |MAP| Test 19 ] erase(iterator) (run 1)
✓ OK

[ |MAP| Test 20 ] erase(key) (run 1)
✓ OK

[ |MAP| Test 21 ] erase(range) (run 1)
✓ OK

[ |MAP| Test 22 ] operator[] access (run 1)
✓ OK

[ |MAP| Test 23 ] begin/end traversal (run 1)
✓ OK

[ |MAP| Test 24 ] const begin/end (run 1)
✓ OK

[ |MAP| Test 25 ] rbegin/rend traversal (run 1)
✓ OK

[ |MAP| Test 26 ] operator== (run 1)
✓ OK

[ |MAP| Test 27 ] operator!= (run 1)
✓ OK

[ |MAP| Test 28 ] operator< (run 1)
✓ OK

[ |MAP| Test 29 ] operator> (run 1)
✓ OK

[ |MAP| Test 30 ] operator<= (run 1)
✓ OK

[ |MAP| Test 31 ] operator>= (run 1)
✓ OK

[ |SET| Test 1 ] Default constructor (run 1)
✓ OK

[ |SET| Test 2 ] Copy constructor (run 1)
✓ OK

[ |SET| Test 3 ] Assignment operator (run 1)
✓ OK

[ |SET| Test 4 ] Clear (run 1)
✓ OK

[ |SET| Test 5 ] Check empty() and size() (run 1)
✓ OK

[ |SET| Test 6 ] Check max_size() > 0 (run 1)
✓ OK

[ |SET| Test 7 ] clear() (run 1)
✓ OK

[ |SET| Test 8 ] swap(a, b) (run 1)
✓ OK

[ |SET| Test 9 ] insert(value) (run 1)
✓ OK

[ |SET| Test 10 ] insert(hint, value) (run 1)
✓ OK

[ |SET| Test 11 ] insert(range) (run 1)
✓ OK

[ |SET| Test 12 ] erase(iterator) (run 1)
✓ OK

[ |SET| Test 13 ] erase(key) (run 1)
✓ OK

[ |SET| Test 14 ] erase(range) (run 1)
✓ OK

[ |SET| Test 15 ] insert(value) (run 1)
✓ OK

[ |SET| Test 16 ] erase(key) (run 1)
✓ OK

[ |SET| Test 17 ] erase(iterator) (run 1)
✓ OK

[ |SET| Test 18 ] clear() (run 1)
✓ OK

[ |SET| Test 19 ] find(key) (run 1)
✓ OK

[ |SET| Test 20 ] count(key) (run 1)
✓ OK

[ |SET| Test 21 ] equal_range(key) (run 1)
✓ OK

[ |SET| Test 22 ] begin/end traversal (run 1)
✓ OK

[ |SET| Test 23 ] const begin/end (run 1)
✓ OK

[ |SET| Test 24 ] rbegin/rend traversal (run 1)
✓ OK

[ |SET| Test 25 ] operator== (run 1)
✓ OK

[ |SET| Test 26 ] operator!= (run 1)
✓ OK

[ |SET| Test 27 ] operator< (run 1)
✓ OK

[ |SET| Test 28 ] operator> (run 1)
✓ OK

[ |SET| Test 29 ] operator<= (run 1)
✓ OK

[ |SET| Test 30 ] operator>= (run 1)
✓ OK

[ |MULTIMAP| Test 1 ] Default constructor (run 1)
✓ OK

[ |MULTIMAP| Test 2 ] Copy constructor (run 1)
✓ OK

[ |MULTIMAP| Test 3 ] Assignment operator (run 1)
✓ OK

[ |MULTIMAP| Test 4 ] Clear (run 1)
✓ OK

[ |MULTIMAP| Test 5 ] Check empty() and size() (run 1)
✓ OK

[ |MULTIMAP| Test 6 ] Check max_size() > 0 (run 1)
✓ OK

[ |MULTIMAP| Test 7 ] clear() (run 1)
✓ OK

[ |MULTIMAP| Test 8 ] swap(a, b) (run 1)
✓ OK

[ |MULTIMAP| Test 9 ] insert(value) (run 1)
✓ OK

[ |MULTIMAP| Test 10 ] erase(key) (run 1)
✓ OK

[ |MULTIMAP| Test 11 ] erase(iterator) (run 1)
✓ OK

[ |MULTIMAP| Test 12 ] clear() (run 1)
✓ OK

[ |MULTIMAP| Test 13 ] find(key) (run 1)
✓ OK

[ |MULTIMAP| Test 14 ] count(key) (run 1)
✓ OK

[ |MULTIMAP| Test 15 ] equal_range(key) (run 1)
✓ OK

[ |MULTIMAP| Test 16 ] insert(value) (run 1)
✓ OK

[ |MULTIMAP| Test 17 ] insert(hint, value) (run 1)
✓ OK

[ |MULTIMAP| Test 18 ] insert(range) (run 1)
✓ OK

[ |MULTIMAP| Test 19 ] erase(iterator) (run 1)
✓ OK

[ |MULTIMAP| Test 20 ] erase(key) (run 1)
✓ OK

[ |MULTIMAP| Test 21 ] erase(range) (run 1)
✓ OK

[ |MULTIMAP| Test 22 ] begin/end traversal (run 1)
✓ OK

[ |MULTIMAP| Test 23 ] const begin/end (run 1)
✓ OK

[ |MULTIMAP| Test 24 ] rbegin/rend traversal (run 1)
✓ OK

[ |MULTIMAP| Test 25 ] operator== (run 1)
✓ OK

[ |MULTIMAP| Test 26 ] operator!= (run 1)
✓ OK

[ |MULTIMAP| Test 27 ] operator< (run 1)
✓ OK

[ |MULTIMAP| Test 28 ] operator> (run 1)
✓ OK

[ |MULTIMAP| Test 29 ] operator<= (run 1)
✓ OK

[ |MULTIMAP| Test 30 ] operator>= (run 1)
✓ OK

[ |MULTISET| Test 1 ] Default constructor (run 1)
✓ OK

[ |MULTISET| Test 2 ] Copy constructor (run 1)
✓ OK

[ |MULTISET| Test 3 ] Assignment operator (run 1)
✓ OK

[ |MULTISET| Test 4 ] Clear (run 1)
✓ OK

[ |MULTISET| Test 5 ] Check empty() and size() (run 1)
✓ OK

[ |MULTISET| Test 6 ] Check max_size() > 0 (run 1)
✓ OK

[ |MULTISET| Test 7 ] clear() (run 1)
✓ OK

[ |MULTISET| Test 8 ] swap(a, b) (run 1)
✓ OK

[ |MULTISET| Test 9 ] insert(value) (run 1)
✓ OK

[ |MULTISET| Test 10 ] insert(hint, value) (run 1)
✓ OK

[ |MULTISET| Test 11 ] insert(range) (run 1)
✓ OK

[ |MULTISET| Test 12 ] erase(iterator) (run 1)
✓ OK

[ |MULTISET| Test 13 ] erase(key) (run 1)
✓ OK

[ |MULTISET| Test 14 ] erase(range) (run 1)
✓ OK

[ |MULTISET| Test 15 ] insert(value) (run 1)
✓ OK

[ |MULTISET| Test 16 ] erase(key) (run 1)
✓ OK

[ |MULTISET| Test 17 ] erase(iterator) (run 1)
✓ OK

[ |MULTISET| Test 18 ] clear() (run 1)
✓ OK

[ |MULTISET| Test 19 ] find(key) (run 1)
✓ OK

[ |MULTISET| Test 20 ] count(key) (run 1)
✓ OK

[ |MULTISET| Test 21 ] equal_range(key) (run 1)
✓ OK

[ |MULTISET| Test 22 ] begin/end traversal (run 1)
✓ OK

[ |MULTISET| Test 23 ] const begin/end (run 1)
✓ OK

[ |MULTISET| Test 24 ] rbegin/rend traversal (run 1)
✓ OK

[ |MULTISET| Test 25 ] operator== (run 1)
✓ OK

[ |MULTISET| Test 26 ] operator!= (run 1)
✓ OK

[ |MULTISET| Test 27 ] operator< (run 1)
✓ OK

[ |MULTISET| Test 28 ] operator> (run 1)
✓ OK

[ |MULTISET| Test 29 ] operator<= (run 1)
✓ OK

[ |MULTISET| Test 30 ] operator>= (run 1)
✓ OK
