AddressSanitizer:DEADLYSIGNAL
=================================================================
==40542==ERROR: AddressSanitizer: SEGV on unknown address (pc 0x648d8e8698f9 bp 0x7ffe197260d0 sp 0x7ffe197260a0 T0)
==40542==The signal is caused by a READ memory access.
==40542==Hint: this fault was caused by a dereference of a high value address (see register values below).  Disassemble the provided pc to learn which register was used.

		// First Fault in operator[] 
		reference operator[](size_type n) {
			size_type offset = _start_offset + n;
			size_type block = _start_block + offset / BLOCK_SIZE;
			size_type index = offset % BLOCK_SIZE;
			return _map[block][index]; <-- Seg fault here
		}
    #0 0x648d8e8698f9 in ft::deque<int, std::allocator<int> >::operator[](unsigned long) ../include/deque.hpp:229

		// Comming from insert 
		iterator insert(iterator position, const T& x) {
    #1 0x648d8e86a81f in ft::deque<int, std::allocator<int> >::insert(ft::deque_random_access_iterator<int>, int const&) ../include/deque.hpp:286

		// This is the original insert called by the tester:
		template <class InputIterator>
		void insert(iterator position, InputIterator first, InputIterator last,
                typename ft::enable_if<!std::numeric_limits<InputIterator>::is_specialized>::type* = 0) {
    #2 0x648d8e86b140 in void ft::deque<int, std::allocator<int> >::insert<ft::deque_random_access_iterator<int> >(ft::deque_random_access_iterator<int>, ft::deque_random_access_iterator<int>, ft::deque_random_access_iterator<int>, ft::enable_if<!std::numeric_limits<ft::deque_random_access_iterator<int> >::is_specialized, void>::type*) ../include/deque.hpp:310




    // After this is irelevant!
		#3 0x648d8e82a2b7 in sequence_modifiers::get_table<ft::deque<int, std::allocator<int> > >()::{lambda(ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&)#3}::operator()(ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&) const include/modifiers_tests.hpp:60
    #4 0x648d8e8fd82a in void std::__invoke_impl<void, sequence_modifiers::get_table<ft::deque<int, std::allocator<int> > >()::{lambda(ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&)#3}&, ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&>(std::__invoke_other, sequence_modifiers::get_table<ft::deque<int, std::allocator<int> > >()::{lambda(ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&)#3}&, ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&) /usr/include/c++/13/bits/invoke.h:61
    #5 0x648d8e8d0a43 in std::enable_if<is_invocable_r_v<void, sequence_modifiers::get_table<ft::deque<int, std::allocator<int> > >()::{lambda(ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&)#3}&, ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&>, void>::type std::__invoke_r<void, sequence_modifiers::get_table<ft::deque<int, std::allocator<int> > >()::{lambda(ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&)#3}&, ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&>(sequence_modifiers::get_table<ft::deque<int, std::allocator<int> > >()::{lambda(ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&)#3}&, ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&) /usr/include/c++/13/bits/invoke.h:111
    #6 0x648d8e89aada in std::_Function_handler<void (ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&), sequence_modifiers::get_table<ft::deque<int, std::allocator<int> > >()::{lambda(ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&)#3}>::_M_invoke(std::_Any_data const&, ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&) /usr/include/c++/13/bits/std_function.h:290
    #7 0x648d8e86f3ae in std::function<void (ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&)>::operator()(ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&) const /usr/include/c++/13/bits/std_function.h:591
    #8 0x648d8e82ef7e in void test_container<ft::deque<int, std::allocator<int> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::function<void (ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&)> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::function<void (ft::deque<int, std::allocator<int> >&, ft::deque<int, std::allocator<int> >&)> > > > const&, unsigned long) include/test_framework.hpp:78
    #9 0x648d8e817762 in test_deque src/main.cpp:67
    #10 0x648d8e81e708 in main src/main.cpp:218
    #11 0x7024d422a1c9 in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58
    #12 0x7024d422a28a in __libc_start_main_impl ../csu/libc-start.c:360
    #13 0x648d8e815804 in _start (/home/pulgamecanica/42Course/42/abstract_data/test_suite/bin/debug.out+0x7804) (BuildId: 8e8c184f5b9dd978645463b37ea9978af36a8566)

AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV ../include/deque.hpp:229 in ft::deque<int, std::allocator<int> >::operator[](unsigned long)
==40542==ABORTING
